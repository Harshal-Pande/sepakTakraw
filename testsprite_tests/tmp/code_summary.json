{tech_stack: [JavaScript, Next.js (App Router), React, Node.js, Tailwind CSS, Shadcn/UI, Supabase, PostgreSQL, Lucide Icons], features: [{name: Player Registration, description: Two-step player registration flow generating a reference number, persisting data via API routes., files: [app/player-registration/step1/page.js, app/player-registration/step2/page.js, app/api/player-registration/step1/route.js, app/api/player-registration/step2/route.js, database/player-registration-schema.sql, lib/validations.js, lib/supabase.js]}, {name: Admin Dashboard, description: Admin pages for managing news, events, elections, media, guidelines, settings, with auth-protected routes., files: [app/admin/layout.js, app/admin/page.js, components/admin/layout/Sidebar.js, components/admin/layout/Topbar.js, components/admin/dashboard/StatsCards.js, app/admin/login/page.js, app/api/admin/login/route.js, lib/auth.js, lib/permissions.js]}, {name: News, description: Public news listing and details; admin CRUD via API., files: [app/news/page.js, app/news/[id]/page.js, app/api/news/route.js, app/admin/news/page.js, app/admin/news/create/page.js, app/admin/news/edit/page.js, components/common/NewsCard.js]}, {name: Events, description: Public events listing and event details; admin CRUD via API and file upload support., files: [app/events/page.js, app/events/[id]/page.js, app/admin/events/page.js, app/admin/events/create/page.js, app/admin/events/edit/page.js, app/api/events/route.js, components/common/EventCard.js, components/common/EventRegistration.js]}, {name: Elections, description: Admin management for elections data with API endpoints., files: [app/admin/elections/page.js, app/admin/elections/create/page.js, app/admin/elections/edit/page.js, app/api/elections/route.js]}, {name: Anti-Doping Guidelines, description: Public page and admin management for anti-doping documents., files: [app/anti-dop-guidelines/page.js, app/admin/anti-dop-guidelines/page.js, app/admin/anti-dop-guidelines/create/page.js, app/admin/anti-dop-guidelines/edit/page.js, app/api/anti-dop-guidelines/route.js, components/common/DocumentViewer.js]}, {name: History & General Body, description: Static content sections managed via admin, served via APIs., files: [app/history/page.js, app/general-body/page.js, app/api/history/route.js, app/api/general-body/route.js, app/admin/history/page.js, app/admin/history/create/page.js, app/admin/history/edit/page.js]}, {name: Hero Images & File Manager, description: Upload and manage hero images and files with API endpoints and storage integration., files: [app/admin/hero-images/page.js, app/api/hero-images/route.js, app/admin/file-manager/page.js, app/api/upload/route.js, components/common/FileUpload.js]}, {name: Results & Stats, description: Public results section and statistics display, with admin management., files: [app/results/page.js, app/api/results/route.js, app/api/stats/route.js, components/sections/StatsSection.js]}, {name: Search & Quick Links, description: Site-wide search and curated quick links., files: [app/api/search/route.js, app/api/quick-links/route.js, components/sections/QuickLinks.js, components/common/SearchBox.js]}, {name: Auth, description: Authentication helpers, middleware, and admin login flow., files: [middleware.js, lib/auth.js, app/admin/login/page.js, app/api/auth/login/route.js]}, {name: Common UI & Layout, description: Site layout components, UI primitives, and theming., files: [components/layout/Navbar.js, components/layout/Hero.js, components/layout/Footer.js, components/ui/button.jsx, components/ui/input.jsx, components/theme-provider.jsx, app/layout.js, app/globals.css, tailwind.config.js]}]}
